http://www.cnblogs.com/springfor/p/3862392.html 这个思路写得很清楚。解释了我不懂的地方。
/*
Thinking process:
0. dummyPre, dummyPost to store the head of the 2 list
1. Append node.val < x to listPre
2. Append node.val >= x to listPost
3. Link them togeter
4. return dummyPre.next
*/

/**
 * Definition for ListNode.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int val) {
 *         this.val = val;
 *         this.next = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param head: The first node of linked list.
     * @param x: an integer
     * @return: a ListNode 
     */
    public ListNode partition(ListNode head, int x) {
        // write your code here
        if(head == null){
            return head;
        }
        ListNode dummyPre = new ListNode(0);//head of prelist
        ListNode dummyPost = new ListNode(0);//head of postlist
        ListNode pre = dummyPre;
        ListNode post = dummyPost;
        while(head != null){
            if(head.val < x){
                pre.next = head;//画图就懂了，就是一步简单的连接。
                pre = pre.next;
            }
            else{
                post.next = head;
                post = post.next;
            }
            head = head.next;
        }
        post.next = null;//attention不要忘！
        pre.next = dummyPost.next;  #注意这里。
        return dummyPre.next; #注意这里。
    }
}
