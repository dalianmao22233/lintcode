第二次：位操作：
public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int res = 0;
        for(int i = 0; i < 32; i++) {
            res = (res << 1) | (n&1);
            n = n >> 1;
        }
        return res;
    }
}
或者更加tricky的：
i = ((i<<1) & 0xaaaaaaaa) + ((i>>>1) & 0x55555555);
i = ((i<<2) & 0xcccccccc) + ((i>>>2) & 0x33333333);
i = ((i<<4) & 0xf0f0f0f0) + ((i>>>4) & 0x0f0f0f0f);
i = ((i<<8) & 0xff00ff00) + ((i>>>8) & 0x00ff00ff);
i = ((i<<16) & 0xffff0000) + ((i >>> 16) & 0x0000ffff);
return i;

第一次；
public class Solution {
    public int reverse(int x) {
         /**
     * 考虑溢出
     * + - 号不用考虑
     * */

     double res = 0;
     while(x != 0){
          //int single = x % 10;
         res = res*10 + x % 10;
         x = x/10;
     }

     if(res > Integer.MAX_VALUE || res < Integer.MIN_VALUE)
         res = 0;

     return (int) res;
    }
}
