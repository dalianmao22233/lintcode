两次DP：
public class Solution {
    /**
     * @param nums: A list of integers
     * @return: An integer denotes the sum of max two non-overlapping subarrays
     */
    public int maxTwoSubArrays(ArrayList<Integer> nums) {
        // write your code
        int size = nums.size();
        int[] left = new int[size];
        int[] right = new int[size];
        int sum = 0;
        int minsum = 0;
        int max = Integer.MIN_VALUE;
        for(int i = 0; i < size; i++){
            sum += nums.get(i);
            max = Math.max(sum-minsum, max);
            minsum = Math.min(sum, minsum);
            left[i] = max;
        }
        max = Integer.MIN_VALUE;
        minsum = 0;
        sum = 0;
        for(int i = size - 1; i >= 0; i--){
            sum += nums.get(i);
            max = Math.max(sum-minsum, max);
            minsum = Math.min(minsum, sum);
            right[i] = max;
        }
        max = Integer.MIN_VALUE;
        for(int i = 0; i < size - 1; i++){
            max = Math.max(max, left[i] + right[i + 1]);//?????
        }
        return max;
    }
}
