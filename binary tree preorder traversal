不能用queue，考虑到遍历顺序根左右，如果用queue，就成了层序遍历。不明白时需要画图比较两个的区别。
/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Preorder in ArrayList which contains node values.
     */
    public ArrayList<Integer> preorderTraversal(TreeNode root) {
        // write your code here
       ArrayList<Integer> result = new ArrayList<Integer>();
       if(root == null){
           return result;
       }
       Stack<TreeNode> stack = new Stack<TreeNode>();
       stack.push(root);
       while(!stack.isEmpty()){
           TreeNode node = stack.pop();
           result.add(node.val);
           if(node.right != null){
               stack.push(node.right);
           }
           if(node.left != null){
               stack.push(node.left);
           }
       }
       return result;
       
        
    }
}
