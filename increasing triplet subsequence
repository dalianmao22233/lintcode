题目中要求我们O(n)的时间复杂度和O(1)的空间复杂度，思路是，我们遍历数组，维护一个最小值，和倒数第二小值，遍历原数组的时候，
如果当前数字小于等于最小值，更新最小值，如果小于等于倒数第二小值，更新倒数第二小值，如果当前数字比最小值和倒数第二小值都大，
说明此时有三个递增的子序列了，直接返回ture，否则遍历结束返回false，参见代码如下：
public class Solution {
    public boolean increasingTriplet(int[] nums) {
        int x = Integer.MAX_VALUE;
    	int y = Integer.MAX_VALUE;
     
    	for (int i = 0; i < nums.length; i++) {
    		int z = nums[i];
     
    		if (x >= z) {
    			x = z;// update x to be a smaller value
    		} else if (y >= z) {
    			y = z; // update y to be a smaller value
    		} else {
    			return true;
    		}
    	}
     
    	return false;
    }
}
