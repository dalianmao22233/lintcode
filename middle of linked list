no.1 my thinking succeed !!!
/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param head: the head of linked list.
     * @return: a middle node of the linked list
     */
    public ListNode middleNode(ListNode head) { 
        // Write your code here
        int start = 0;
        int end = 0; 
        int count = 0;
        
        if(head == null){
            return null;
        }
        ListNode headReset = head;
        while(head.next != null){
            head = head.next;
            count++;
        }
        end = count;
        int middle = start + (end - start)/2;
        for(int i = 0; i < middle; i++){
            headReset = headReset.next;
        }
        return headReset;
version2:
        // if (head == null || head.next == null) {
        //     return head;
        // }
        
        // ListNode slow = head;
        // ListNode fast = head.next;
        // while (fast!= null && fast.next != null) {
        //     slow = slow.next;
        //     fast = fast.next.next;
        // }
        // return slow;
    }
}
