这个方法虽好，但是想不到。。
public class Solution {
  public List<List<Integer>> permute(int[] nums) {
        LinkedList<List<Integer>> list = new LinkedList<List<Integer>>();
        if(nums.length==0) return list;
        list.add(new ArrayList<Integer>());
        System.out.println("size outside: " + list.size() );
        for(int num : nums){
            int size = list.size();
            System.out.println("size: " + size );
            for(;size>0;size--){
                List<Integer> helper = list.poll();
                for(int i=0;i<=helper.size();i++){
                    List<Integer> temp = new ArrayList<Integer>(helper);
                    temp.add(i,num);
                    list.add(temp);
                    System.out.println("list, tmp: " + list + "," + temp );
                }
            }
        }
        return list;
    }
}

Your input

[1,2,3]
Your stdout

size outside: 1
size: 1
list, tmp: [[1]],[1]
size: 1
list, tmp: [[2, 1]],[2, 1]
list, tmp: [[2, 1], [1, 2]],[1, 2]
size: 2
list, tmp: [[1, 2], [3, 2, 1]],[3, 2, 1]
list, tmp: [[1, 2], [3, 2, 1], [2, 3, 1]],[2, 3, 1]
list, tmp: [[1, 2], [3, 2, 1], [2, 3, 1], [2, 1, 3]],[2, 1, 3]
list, tmp: [[3, 2, 1], [2, 3, 1], [2, 1, 3], [3, 1, 2]],[3, 1, 2]
list, tmp: [[3, 2, 1], [2, 3, 1], [2, 1, 3], [3, 1, 2], [1, 3, 2]],[1, 3, 2]
list, tmp: [[3, 2, 1], [2, 3, 1], [2, 1, 3], [3, 1, 2], [1, 3, 2], [1, 2, 3]],[1, 2, 3]
