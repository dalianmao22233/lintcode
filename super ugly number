本质上和Ugly Number II 丑陋数之二没有什么区别，由于我们不知道质数的个数，我们可以用一个idx数组来保存当前的位置，
然后我们从每个子链中取出一个数，找出其中最小值，然后更新idx数组对应位置，注意有可能最小值不止一个，要更新所有最小值的位置
public class Solution {
    public int nthSuperUglyNumber(int n, int[] primes) {
        if(n == 1) return 1;
        if(n <= 0) return 0;
        int len = primes.length;
        int[] index = new int[len];
        int[] res = new int[n];
        res[0] = 1;
        for(int i = 1; i < n; i++) {
            int min = Integer.MAX_VALUE;
            for(int j = 0; j < len; j++) {
                min = Math.min(res[index[j]] * primes[j], min);
            }
            res[i] = min;
            for(int j = 0; j < len; j++) {
                if(res[i] % primes[j] == 0) {
                    index[j]++;
                }
            }
        }
        return res[n-1];
    }
  
}
