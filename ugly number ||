这道题是之前那道Ugly Number 丑陋数的延伸，这里让我们找到第n个丑陋数，还好题目中给了很多提示，基本上相当于告诉我们解法了，根据提示中的信息，
我们知道丑陋数序列可以拆分为下面3个子列表：

(1) 1×2, 2×2, 3×2, 4×2, 5×2, …
(2) 1×3, 2×3, 3×3, 4×3, 5×3, …
(3) 1×5, 2×5, 3×5, 4×5, 5×5, …

仔细观察上述三个列表，我们可以发现每个子列表都是一个丑陋数分别乘以2,3,5，而要求的丑陋数就是从已经生成的序列中取出来的，
我们每次都从三个列表中取出当前最小的那个加入序列，
public class Solution {
    public int nthUglyNumber(int n) {
        if(n == 1) return 1;
        if(n <= 0) return -1;
        int[] res = new int[n];
        res[0] = 1;
        int index2 = 0, index3 = 0, index5 = 0;
        for(int i = 1; i < n; i++) {
            res[i] = Math.min(2*res[index2], Math.min(3*res[index3], 5*res[index5]));
            if(res[i] == 2*res[index2]) index2++;
            if(res[i] == 3*res[index3]) index3++;
            if(res[i] == 5*res[index5]) index5++;
        }
        return res[n-1];
    }
    
}
