这道题的test case:
[1,3,0]
2
[2]
1
输出为[1,2,3]
空位写在最后，m是按照前面的元素算的个数。。不要再进坑了。另外，循环合并之后m 不用再验证是否为0，
因为num1里剩下的排列顺序是不会变的，不用再管。当然加上也没问题。
public class Solution {
    public void merge(int[] nums1, int m, int[] nums2, int n) {
        int index = m+n-1;
        int i = m-1;
        int j = n-1;
        while(i>=0 && j>=0){
            if(nums1[i] > nums2[j]){
                nums1[index--] = nums1[i--];//值大的放后面。
                
            }else{
                nums1[index--] = nums2[j--];
            }
        }
        while(i >= 0){
            nums1[index--] = nums1[i--];
        }
        while(j >= 0){
            nums1[index--] =  nums2[j--];
        }
    }
}
=================
public ArrayList<Integer> mergeSortedArray(ArrayList<Integer> A, ArrayList<Integer> B) {
        int len = B.size();
        for (int i = 0; i < len; ++i) 
            A.add(B.get(i));
        Collections.sort(A);
        return A;
    }
