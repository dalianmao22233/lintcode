/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> res = new ArrayList<String>();
        if(root == null){
            return res;
        }
        view(res, String.valueOf(root.val), root);
        return res;
    }
    private void view(List<String> res, String path, TreeNode root){
        if(root == null){
            return;
        }
        if(root.left == null && root.right == null){
            res.add(path);
            // return;
        }
        if(root.left != null){
            view(res, path+"->"+String.valueOf(root.left.val), root.left);
        }
        if(root.right != null){
            view(res, path+"->"+String.valueOf(root.right.val), root.right);
        }
    }
}
