/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        // write your code here
        if(root == null){
            root = node;
            return root;
        }
        TreeNode parent_node = null;
        TreeNode cur_node = root;
        while(cur_node != null){
            parent_node = cur_node;
            if(cur_node.val > node.val){
                cur_node = cur_node.left;
            }
            else{
                cur_node = cur_node.right;
            }
        }
        if(parent_node != null){
            if(parent_node.val > node.val){
                parent_node.left = node;
            }
            else{
                parent_node.right = node;
            }
        }
        return root;
        
    }
}

另一种做法：
public class Solution {
    /**
     * @param root: The root of the binary search tree.
     * @param node: insert this node into the binary search tree
     * @return: The root of the new binary search tree.
     */
    public TreeNode insertNode(TreeNode root, TreeNode node) {
        if (root == null) {
            return node;
        }
        if (root.val > node.val) {
            root.left = insertNode(root.left, node);
        } else {
            root.right = insertNode(root.right, node);
        }
        return root;
    }
}
