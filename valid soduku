public class Solution {
    public boolean isValidSudoku(char[][] board) {
        if (board == null || board.length == 0) {
            return false;
        }
        Set<Character> rows = new HashSet<Character>();
        Set<Character> cols = new HashSet<Character>();
        Set<Character> cube = new HashSet<Character>();
        for(int i = 0; i < 9; i++){
            for (int j = 0; j < 9;j++){
                if(board[i][j] != '.' && !rows.add(board[i][j])) {
                    return false;
                }
                if(board[j][i] != '.' && !cols.add(board[j][i])) {
                    return false;
                }
                int RowIndex = 3 * (i / 3);
                int ColIndex = 3 * (i % 3);
                if(board[RowIndex + j / 3][ColIndex + j % 3]!= '.' && !cube.add(board[RowIndex + j / 3][ColIndex + j % 3])) {
                    return false;
                }
            }
            rows.clear();
            cols.clear();
            cube.clear();
        }
        return true;
    }
}
