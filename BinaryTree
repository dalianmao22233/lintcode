Inorder Traversal
/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */
public class Solution {
    /**
     * @param root: The root of binary tree.
     * @return: Inorder in ArrayList which contains node values.
     */
    public ArrayList<Integer> inorderTraversal(TreeNode root) {
        // write your code here
        ArrayList<Integer> result = new ArrayList<Integer>();
        Stack<TreeNode> stack = new Stack<TreeNode>();

        if(root == null){
            return result;
        }
        TreeNode curt = root;
        while(true){
            while(curt != null){
                stack.push(curt);
                curt = curt.left;//顺着左边一直向下，
                //也就是所有根节点，左孩子都进栈了
            }
            if(stack.isEmpty()){
                break;
            }
            curt = stack.pop();
            result.add(curt.val);
            curt = curt.right;//回溯找到右孩子，下次循环进栈
        }
        
        return result;
    }
}
