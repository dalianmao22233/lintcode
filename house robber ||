首尾相邻，需要进行处理。
public class Solution {
    public int rob(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int[] sum = new int[nums.length];
        if(nums.length == 1) return nums[0];
        sum[0] = nums[0];
        sum[1] = Math.max(nums[0], nums[1]);
        return Math.max(house_robber1(nums, 0, nums.length-2), house_robber1(nums, 1, nums.length-1));
        
        
    }
    public int house_robber1(int[] nums, int start, int end) {
        int[] res = new int[2];
        if (start > end) return 0;
        if (start == end) return nums[start];
        if (start+1 == end) return Math.max(nums[start], nums[end]);
        res[start%2] = nums[start];
        res[(start+1)%2] = Math.max(nums[start], nums[start+1]);
        for (int i = start+2; i <= end; i++){
            res[i%2] = Math.max(res[(i-1)%2], res[(i-2)%2]+nums[i]);
        }
        return res[end%2];
    }
}
