public class Solution {
    public String longestPalindrome(String s) {
        if(s.length()==0)
            return "";
        int startIdx = 0;
        int currLen = 1;
        for(int i=0; i<s.length(); i++) {
            // for odd
            int len = 1;
            for(int j = i-1, k= i+1; j >= 0 && k < s.length(); j--, k++, len+=2)
                if(s.charAt(j) != s.charAt(k))
                    break;
            if(len > currLen) {
                startIdx = i-len/2;
                currLen = len;
            }
            // for even
            len = 0;
            for(int j=i, k=i+1; j>=0 && k<s.length(); j--, k++, len+=2)
                if(s.charAt(j) != s.charAt(k))
                    break;
            if(len > currLen) {
                startIdx = i-len/2+1;
                currLen = len;
            }
        }
        return s.substring(startIdx,startIdx+currLen);
    }
}
