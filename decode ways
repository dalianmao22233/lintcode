很巧妙的DP。
 另：使用DP思想的一些题目 - decode ways, climb stairs, find LCS(longest common subsequence), 
 find longest ascending subsequence, fine longest descending subsequens, 背包问题，poj滑雪，等等。
public class Solution {
    public int numDecodings(String s) {
        if(s == null || s.length() == 0) return 0;
        int[]  dp = new int[s.length()+1];
        dp[0] = 1;
        dp[1] = s.charAt(0) != '0'? 1:0;
        for(int i = 2; i < dp.length; i++){
            int first = Integer.valueOf(s.substring(i-1, i));
            int second = Integer.valueOf(s.substring(i-2, i));
            if(first >= 1 && first <= 9) {
                dp[i] += dp[i-1]; //前一位的情况如果是符合条件的一位数，就加上这么多的情况。
            }
            if(second >= 10 && second <= 26) {
                dp[i] += dp[i-2];//前两位的情况如何是符合条件的二位数，就加上这么多的情况。
            }
        }
        return dp[s.length()];
    }
}
